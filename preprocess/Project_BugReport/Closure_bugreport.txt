Closure-1$$function arguments should not be optimized away
Closure-10$$Wrong code generated if mixing types in ternary operator
Closure-100$$Only assignment to "this" issues a "dangerous use of the global this object" warning.
Closure-101$$--process_closure_primitives can't be set to false
Closure-102$$compiler assumes that 'arguments' can be shadowed
Closure-103$$Compiler gives false error with respect to unreachable code
Closure-104$$Typos in externs/html5.js
Closure-105$$Array Join Munged Incorrectly
Closure-106$$Exception thrown from com.google.javascript.jscomp.CollapseProperties.addStubsForUndeclaredProperties
Closure-107$$Variable names prefixed with MSG_ cause error with advanced optimizations
Closure-108$$precondition crash: goog.scope local with aliased in the type declaration
Closure-109$$Constructor types that return all or unknown fail to parse
Closure-11$$Record type invalid property not reported on function with @this annotation
Closure-110$$Allow @private top-level functions in goog.scope
Closure-111$$goog.isArray doesn't hint compiler
Closure-112$$Template types on methods incorrectly trigger inference of a template on the class if that template type is unknown
Closure-113$$Bug in require calls processing
Closure-114$$Crash on the web closure compiler
Closure-115$$Erroneous optimization in ADVANCED_OPTIMIZATIONS mode
Closure-116$$Erroneous optimization in ADVANCED_OPTIMIZATIONS mode
Closure-117$$Wrong type name reported on missing property error.
Closure-118$$Prototype method incorrectly removed
Closure-119$$catch(e) yields JSC_UNDEFINED_NAME warning when e is used in catch in advanced mode
Closure-12$$Try/catch blocks incorporate code not inside original blocks
Closure-120$$Overzealous optimization confuses variables
Closure-121$$Overzealous optimization confuses variables
Closure-122$$Inconsistent handling of non-JSDoc comments
Closure-123$$Generates code with invalid for/in left-hand assignment
Closure-124$$Different output from RestAPI and command line jar
Closure-125$$IllegalStateException at com.google.javascript.rhino.jstype.FunctionType.getInstanceType
Closure-126$$Break in finally block isn't optimized properly
Closure-127$$Break in finally block isn't optimized properly
Closure-128$$The compiler quotes the "0" keys in object literals
Closure-129$$Casting a function before calling it produces bad code and breaks plugin code
Closure-13$$true/false are not always replaced for !0/!1
Closure-130$$arguments is moved to another scope
Closure-131$$unicode characters in property names result in invalid output
Closure-132$$if statement
Closure-133$$Exception when parsing erroneous jsdoc: /**@return {@code foo} bar   *    baz. */
Closure-134$$@inheritDoc doesn't play well with interfaces
Closure-135$$Inheritance not detected when prototype directly assigned
Closure-136$$$super is replaced when it should not be replaced
Closure-137$$Invalid JSC_DETERMINISTIC_TEST
Closure-138$$Invalid JSC_DETERMINISTIC_TEST
Closure-139$$Redefinition of a function in third party code can be miscompiled
Closure-14$$bogus 'missing return' warning
Closure-140$$Google Common Loader Extern
Closure-141$$The side effects of function1||function2 are not calculated
Closure-142$$Internet Explorer runtime error after compilation.
Closure-143$$@define does not support strings
Closure-144$$Auto-identify void functions
Closure-145$$Bug with labeled loops and breaks
Closure-146$$bad type inference for != undefined
Closure-147$$Lost a JSC_USED_GLOBAL_THIS warning in 0616 release vs 0514
Closure-148$$CSS3 'writingMode' not recognised in advanced mode
Closure-149$$Add option to turn off string escaping
Closure-15$$Switched order of "delete key" and "key in" statements changes semantic
Closure-150$$Type checker misses annotations on functions defined within functions
Closure-151$$Add a --version option for the compiler.
Closure-152$$resolveTypes: jstype.UnionType cannot be cast to jstype.ObjectType
Closure-153$$Namespace definition in Prototype is broken
Closure-154$$Add support for data members on interfaces
Closure-155$$Overzealous arguments optimisation
Closure-156$$Compiler crashes on assign statement
Closure-157$$Numbers and quoted property names reject for get and set properties.
Closure-158$$Order of jscomp_error, jscomp_warning, jscomp_off flags are not preserved
Closure-159$$Closure Compiler failed to translate all instances of a function name
Closure-16$$JSCompiler does not recursively resolve typedefs
Closure-160$$checkVars / undefinedVars diagnostics not working from command line
Closure-161$$peephole constants folding pass is trying to fold [][11] as if it were a property lookup instead of a property assignment
Closure-162$$Type aliases cannot be used in type annotations before their definitions
Closure-163$$VarCheck Crash When Using Modules
Closure-164$${function(number, string)} should not be assignable to {function(number)}
Closure-165$$Properties defined on any record type applying to unrelated record types
Closure-166$$anonymous object type inference inconsistency when used in union
Closure-167$$invalid property not erroring in for loop in prototype function
Closure-168$$Wrong argument count error not reported on this aliasing (on function with @this annotation)
Closure-169$$Strange "wrong parameter" warning for callback function
Closure-17$$@const dumps type cast information
Closure-170$$Overly aggressive comma removal
Closure-171$$Assigning object literals to obj.prototype in a immediately executed function not recognized.
Closure-172$$Type of prototype property incorrectly inferred to string
Closure-173$$Operator precedence breaks with certain combinations of *, / and %.
Closure-174$$compiler crash on goog.scope locals
Closure-175$$Erroneous optimization in ADVANCED_OPTIMIZATIONS mode
Closure-176$$initial type of variable wrong when initialize in a "var" statement with type declaration.
Closure-18$$Dependency sorting with closurePass set to false no longer works.
Closure-19$$Type refining of 'this' raises IllegalArgumentException
Closure-2$$combining @interface and multiple @extends can crash compiler
Closure-20$$String conversion optimization is incorrect
Closure-21$$Classify non-rightmost expressions as problematic
Closure-22$$Classify non-rightmost expressions as problematic
Closure-23$$tryFoldArrayAccess does not check for side effects
Closure-24$$goog.scope doesn't properly check declared functions
Closure-25$$anonymous object type inference behavior is different when calling constructors
Closure-26$$ProcessCommonJSModules module$exports failures when checkTypes enabled
Closure-27$$Error trying to build try-catch block (AST)
Closure-28$$constant functions not inlined aggressively enough
Closure-29$$closure compiler screws up a perfectly valid isFunction() implementation
Closure-3$$optimization fails with variable in catch clause
Closure-30$$Combining temporary strings are over-optimized in advanced build
Closure-31$$Add support for --manage_closure_dependencies and --only_closure_dependencies with compilation level WHITESPACE_ONLY
Closure-32$$Preserve doesn't preserve whitespace at start of line
Closure-33$$weird object literal invalid property error on unrelated object prototype
Closure-34$$StackOverflowError exception when running closure compiler (javascript attached)
Closure-35$$assignment to object in conditional causes type error on function w/ record type return type
Closure-36$$goog.addSingletonGetter prevents unused class removal
Closure-37$$incomplete function definition crashes the compiler when ideMode is enabled
Closure-38$$Identifier minus a negative number needs a space between the "-"s
Closure-39$$externExport with @typedef can generate invalid externs
Closure-4$$Converting from an interface type to a constructor which @implements itself causes stack overflow.
Closure-40$$smartNameRemoval causing compiler crash
Closure-41$$In ADVANCED mode, Compiler fails to warn about overridden methods with different signatures.
Closure-42$$Simple "Whitespace only" compression removing "each" keyword from "for each (var x in arr)" loop
Closure-43$$@lends does not work unless class is defined beforehand
Closure-44$$alert(/ / / / /)
Closure-45$$Assignment removed when used as an expression result to Array.push
Closure-46$$ClassCastException during TypeCheck pass
Closure-47$$Original source line numbers are one-based in source maps.
Closure-48$$Type checking error when replacing a function with a stub after calling.
Closure-49$$Incorrect output if a function is assigned to a variable, and the function contains a variable with the same name
Closure-5$$Compiler ignores 'delete' statements, can break functionality.
Closure-50$$Optimisation: convert array.join(",") to array.join()
Closure-51$$-0.0 becomes 0 even in whitespace mode
Closure-52$$Converts string properties into numbers in literal object definitions
Closure-53$$compiler-20110811 crashes with index(1) must be less than size(1)
Closure-54$$Prototype methods can't be used from the constructor in case prototype is explicitly defined.
Closure-55$$Exception when emitting code containing getters
Closure-56$$Last warning or error in output is truncated
Closure-57$$compiler crashes when  goog.provide used with non string 
Closure-58$$Online CC bug: report java error.
Closure-59$$Cannot exclude globalThis checks through command line
Closure-6$$better 'this' type checking
Closure-60$$void function () {}(); wrongly identified as having no side effects
Closure-61$$Closure removes needed code.
Closure-62$$Column-indicating caret is sometimes not in error output
Closure-64$$--language_in=ECMASCRIPT5_STRICT results in 1 'use strict' per input file
Closure-65$$String escaping mishandles null byte
Closure-66$$@enum does not type correctly
Closure-67$$Advanced compilations renames a function and then deletes it, leaving a reference to a renamed but non-existent function
Closure-68$$Cryptic error message on invalid "@type function" annotation
Closure-69$$Compiler should warn/error when instance methods are operated on
Closure-7$$Bad type inference with goog.isFunction and friends
Closure-70$$unexpected typed coverage of less than 100%
Closure-71$$no warnings when @private prop is redeclared on subclass
Closure-72$$Internal Compiler Error on Bullet
Closure-73$$Codepoint U+007f appears raw in output
Closure-74$$Obvious optimizations don't works in "inline if"
Closure-75$$closure compiled swfobject error
Closure-76$$Assignments within conditions are sometimes incorrectly removed
Closure-77$$\0 \x00 and \u0000 are translated to null character
Closure-78$$division by zero wrongly throws JSC_DIVIDE_BY_0_ERROR
Closure-79$$RuntimeException when compiling with extern prototype
Closure-8$$Obfuscated code triggers TypeError in Firefox
Closure-80$$Unexpected expression nodeDELPROP 1
Closure-81$$An unnamed function statement statements should generate a parse error
Closure-82$$.indexOf fails to produce missing property warning
Closure-83$$Cannot see version with --version
Closure-84$$Invalid left-hand side of assignment not detected
Closure-85$$Reproduceable crash with switch statement
Closure-86$$side-effects analysis incorrectly removing function calls with side effects
Closure-87$$IE8 error: Object doesn't support this action
Closure-88$$Incorrect assignment removal from expression in simple mode.
Closure-89$$Compiler removes function properties that it should not
Closure-9$$Compiler fails to find amd module in a subdirectory
Closure-90$$@this emits warning when used with a typedef
Closure-91$$support @lends annotation
Closure-92$$bug with implicit namespaces across modules
Closure-94$$closure-compiler @define annotation does not allow line to be split on 80 characters.
Closure-95$$Use @public tag to prevent compression of symbol names
Closure-96$$Missing type-checks for var_args notation
Closure-97$$Unsigned Shift Right (>>>) bug operating on negative numbers
Closure-98$$bad variable inlining in closure
Closure-99$$Prototypes declared with quotes produce a JSC_USED_GLOBAL_THIS warning.
